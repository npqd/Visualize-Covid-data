<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0415.1144                               -->
<workbook original-version='18.1' source-build='2022.1.1 (20221.22.0415.1144)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='TotalCases/1M pop (bin) Parameter 2' datatype='real' name='[TotalCases/1M pop (bin) Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='35000.'>
        <calculation class='tableau' formula='35000.' />
        <range granularity='35000.0' max='176100.5' min='35000.0' />
      </column>
      <column caption='TotalCases/1M pop (bin) Parameter 3' datatype='real' name='[TotalCases/1M pop (bin) Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='100000.'>
        <calculation class='tableau' formula='100000.' />
        <range granularity='100000.0' max='176100.5' min='100000.0' />
      </column>
      <column caption='TotalCases/1M pop (bin) Parameter' datatype='real' name='[TotalCases/1M pop (bin) Parameter]' param-domain-type='range' role='measure' type='quantitative' value='35220.099999999999'>
        <calculation class='tableau' formula='35220.099999999999' />
        <range granularity='35220.099999999999' max='176100.5' min='35220.099999999999' />
      </column>
    </datasource>
    <datasource caption='NewRecovered' inline='true' name='federated.1efx2gr1oxqs6818ry6wb133suv2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='NewRecovered' name='textscan.1o4jps41k9ghmj13rkwkq0q3uksr'>
            <connection class='textscan' directory='G:/Nam3/HKII/TQH/lab2' filename='NewRecovered.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1o4jps41k9ghmj13rkwkq0q3uksr' name='NewRecovered.csv' table='[NewRecovered#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Africa' ordinal='1' />
            <column datatype='integer' name='Asia' ordinal='2' />
            <column datatype='integer' name='Australia/Oceania' ordinal='3' />
            <column datatype='integer' name='Europe' ordinal='4' />
            <column datatype='integer' name='North America' ordinal='5' />
            <column datatype='integer' name='South America' ordinal='6' />
            <column datatype='string' name='F8' ordinal='7' />
            <column datatype='string' name='F9' ordinal='8' />
            <column datatype='string' name='F10' ordinal='9' />
            <column datatype='string' name='F11' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1o4jps41k9ghmj13rkwkq0q3uksr' name='NewRecovered.csv' table='[NewRecovered#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Africa' ordinal='1' />
            <column datatype='integer' name='Asia' ordinal='2' />
            <column datatype='integer' name='Australia/Oceania' ordinal='3' />
            <column datatype='integer' name='Europe' ordinal='4' />
            <column datatype='integer' name='North America' ordinal='5' />
            <column datatype='integer' name='South America' ordinal='6' />
            <column datatype='string' name='F8' ordinal='7' />
            <column datatype='string' name='F9' ordinal='8' />
            <column datatype='string' name='F10' ordinal='9' />
            <column datatype='string' name='F11' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[NewRecovered.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[NewRecovered.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NewRecovered.csv_6F05AF91E62D4BD7B64D7E80BF152122]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Africa</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Africa]</local-name>
            <parent-name>[NewRecovered.csv]</parent-name>
            <remote-alias>Africa</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NewRecovered.csv_6F05AF91E62D4BD7B64D7E80BF152122]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Asia</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Asia]</local-name>
            <parent-name>[NewRecovered.csv]</parent-name>
            <remote-alias>Asia</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NewRecovered.csv_6F05AF91E62D4BD7B64D7E80BF152122]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Australia/Oceania</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Australia/Oceania]</local-name>
            <parent-name>[NewRecovered.csv]</parent-name>
            <remote-alias>Australia/Oceania</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NewRecovered.csv_6F05AF91E62D4BD7B64D7E80BF152122]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Europe</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Europe]</local-name>
            <parent-name>[NewRecovered.csv]</parent-name>
            <remote-alias>Europe</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NewRecovered.csv_6F05AF91E62D4BD7B64D7E80BF152122]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>North America</remote-name>
            <remote-type>20</remote-type>
            <local-name>[North America]</local-name>
            <parent-name>[NewRecovered.csv]</parent-name>
            <remote-alias>North America</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NewRecovered.csv_6F05AF91E62D4BD7B64D7E80BF152122]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>South America</remote-name>
            <remote-type>20</remote-type>
            <local-name>[South America]</local-name>
            <parent-name>[NewRecovered.csv]</parent-name>
            <remote-alias>South America</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NewRecovered.csv_6F05AF91E62D4BD7B64D7E80BF152122]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F8</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F8]</local-name>
            <parent-name>[NewRecovered.csv]</parent-name>
            <remote-alias>F8</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NewRecovered.csv_6F05AF91E62D4BD7B64D7E80BF152122]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F9</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F9]</local-name>
            <parent-name>[NewRecovered.csv]</parent-name>
            <remote-alias>F9</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NewRecovered.csv_6F05AF91E62D4BD7B64D7E80BF152122]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F10</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F10]</local-name>
            <parent-name>[NewRecovered.csv]</parent-name>
            <remote-alias>F10</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NewRecovered.csv_6F05AF91E62D4BD7B64D7E80BF152122]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F11</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F11]</local-name>
            <parent-name>[NewRecovered.csv]</parent-name>
            <remote-alias>F11</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NewRecovered.csv_6F05AF91E62D4BD7B64D7E80BF152122]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Africa]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Asia]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Australia/Oceania]' role='measure' type='quantitative' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Europe]' role='measure' type='quantitative' />
      <column datatype='string' hidden='true' name='[F10]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F11]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F8]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F9]' role='dimension' type='nominal' />
      <column datatype='integer' name='[North America]' role='measure' type='quantitative' />
      <column datatype='integer' name='[South America]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='NewRecovered.csv' datatype='table' name='[__tableau_internal_object_id__].[NewRecovered.csv_6F05AF91E62D4BD7B64D7E80BF152122]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[NewRecovered.csv_6F05AF91E62D4BD7B64D7E80BF152122]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:NewRecovered.csv_6F05AF91E62D4BD7B64D7E80BF152122:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Africa]' derivation='Sum' name='[sum:Africa:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Asia]' derivation='Sum' name='[sum:Asia:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Australia/Oceania]' derivation='Sum' name='[sum:Australia/Oceania:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Europe]' derivation='Sum' name='[sum:Europe:qk]' pivot='key' type='quantitative' />
      <column-instance column='[North America]' derivation='Sum' name='[sum:North America:qk]' pivot='key' type='quantitative' />
      <column-instance column='[South America]' derivation='Sum' name='[sum:South America:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Date)' hidden='true' name='[Action (Date)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Date]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#06237a'>
              <bucket>&quot;[federated.1efx2gr1oxqs6818ry6wb133suv2].[sum:Europe:qk]&quot;</bucket>
            </map>
            <map to='#0e6ece'>
              <bucket>&quot;[federated.1efx2gr1oxqs6818ry6wb133suv2].[sum:Africa:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1efx2gr1oxqs6818ry6wb133suv2].[__tableau_internal_object_id__].[cnt:NewRecovered.csv_6F05AF91E62D4BD7B64D7E80BF152122:qk]&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;[federated.1efx2gr1oxqs6818ry6wb133suv2].[sum:Asia:qk]&quot;</bucket>
            </map>
            <map to='#bda4e3'>
              <bucket>&quot;[federated.1efx2gr1oxqs6818ry6wb133suv2].[sum:Australia/Oceania:qk]&quot;</bucket>
            </map>
            <map to='#c3638a'>
              <bucket>&quot;[federated.1efx2gr1oxqs6818ry6wb133suv2].[sum:North America:qk]&quot;</bucket>
            </map>
            <map to='#d6de31'>
              <bucket>&quot;[federated.1efx2gr1oxqs6818ry6wb133suv2].[sum:South America:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='NewRecovered.csv' id='NewRecovered.csv_6F05AF91E62D4BD7B64D7E80BF152122'>
            <properties context=''>
              <relation connection='textscan.1o4jps41k9ghmj13rkwkq0q3uksr' name='NewRecovered.csv' table='[NewRecovered#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='integer' name='Africa' ordinal='1' />
                  <column datatype='integer' name='Asia' ordinal='2' />
                  <column datatype='integer' name='Australia/Oceania' ordinal='3' />
                  <column datatype='integer' name='Europe' ordinal='4' />
                  <column datatype='integer' name='North America' ordinal='5' />
                  <column datatype='integer' name='South America' ordinal='6' />
                  <column datatype='string' name='F8' ordinal='7' />
                  <column datatype='string' name='F9' ordinal='8' />
                  <column datatype='string' name='F10' ordinal='9' />
                  <column datatype='string' name='F11' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='NewDeaths' inline='true' name='federated.0shcs75198btm017a11h90q3o8o7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='NewDeaths' name='textscan.12yphig1bsvobk1cut9g91czdpg0'>
            <connection class='textscan' directory='G:/Nam3/HKII/TQH/lab2' filename='NewDeaths.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.12yphig1bsvobk1cut9g91czdpg0' name='NewDeaths.csv' table='[NewDeaths#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Africa' ordinal='1' />
            <column datatype='integer' name='Asia' ordinal='2' />
            <column datatype='integer' name='Australia/Oceania' ordinal='3' />
            <column datatype='integer' name='Europe' ordinal='4' />
            <column datatype='integer' name='North America' ordinal='5' />
            <column datatype='integer' name='South America' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.12yphig1bsvobk1cut9g91czdpg0' name='NewDeaths.csv' table='[NewDeaths#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Africa' ordinal='1' />
            <column datatype='integer' name='Asia' ordinal='2' />
            <column datatype='integer' name='Australia/Oceania' ordinal='3' />
            <column datatype='integer' name='Europe' ordinal='4' />
            <column datatype='integer' name='North America' ordinal='5' />
            <column datatype='integer' name='South America' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[NewDeaths.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[NewDeaths.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NewDeaths.csv_84BCC04EF75845FD880DBDAA610C9071]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Africa</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Africa]</local-name>
            <parent-name>[NewDeaths.csv]</parent-name>
            <remote-alias>Africa</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NewDeaths.csv_84BCC04EF75845FD880DBDAA610C9071]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Asia</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Asia]</local-name>
            <parent-name>[NewDeaths.csv]</parent-name>
            <remote-alias>Asia</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NewDeaths.csv_84BCC04EF75845FD880DBDAA610C9071]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Australia/Oceania</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Australia/Oceania]</local-name>
            <parent-name>[NewDeaths.csv]</parent-name>
            <remote-alias>Australia/Oceania</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NewDeaths.csv_84BCC04EF75845FD880DBDAA610C9071]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Europe</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Europe]</local-name>
            <parent-name>[NewDeaths.csv]</parent-name>
            <remote-alias>Europe</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NewDeaths.csv_84BCC04EF75845FD880DBDAA610C9071]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>North America</remote-name>
            <remote-type>20</remote-type>
            <local-name>[North America]</local-name>
            <parent-name>[NewDeaths.csv]</parent-name>
            <remote-alias>North America</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NewDeaths.csv_84BCC04EF75845FD880DBDAA610C9071]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>South America</remote-name>
            <remote-type>20</remote-type>
            <local-name>[South America]</local-name>
            <parent-name>[NewDeaths.csv]</parent-name>
            <remote-alias>South America</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NewDeaths.csv_84BCC04EF75845FD880DBDAA610C9071]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Africa]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Asia]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Australia/Oceania]' role='measure' type='quantitative' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Europe]' role='measure' type='quantitative' />
      <column datatype='integer' name='[North America]' role='measure' type='quantitative' />
      <column datatype='integer' name='[South America]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='NewDeaths.csv' datatype='table' name='[__tableau_internal_object_id__].[NewDeaths.csv_84BCC04EF75845FD880DBDAA610C9071]' role='measure' type='quantitative' />
      <column-instance column='[Africa]' derivation='Sum' name='[sum:Africa:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Asia]' derivation='Sum' name='[sum:Asia:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Australia/Oceania]' derivation='Sum' name='[sum:Australia/Oceania:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Europe]' derivation='Sum' name='[sum:Europe:qk]' pivot='key' type='quantitative' />
      <column-instance column='[North America]' derivation='Sum' name='[sum:North America:qk]' pivot='key' type='quantitative' />
      <column-instance column='[South America]' derivation='Sum' name='[sum:South America:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Date)' hidden='true' name='[Action (Date)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Date]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#06237a'>
              <bucket>&quot;[federated.0shcs75198btm017a11h90q3o8o7].[sum:Europe:qk]&quot;</bucket>
            </map>
            <map to='#0e6ece'>
              <bucket>&quot;[federated.0shcs75198btm017a11h90q3o8o7].[sum:Africa:qk]&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;[federated.0shcs75198btm017a11h90q3o8o7].[sum:Asia:qk]&quot;</bucket>
            </map>
            <map to='#bda4e3'>
              <bucket>&quot;[federated.0shcs75198btm017a11h90q3o8o7].[sum:Australia/Oceania:qk]&quot;</bucket>
            </map>
            <map to='#c3638a'>
              <bucket>&quot;[federated.0shcs75198btm017a11h90q3o8o7].[sum:North America:qk]&quot;</bucket>
            </map>
            <map to='#d6de31'>
              <bucket>&quot;[federated.0shcs75198btm017a11h90q3o8o7].[sum:South America:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='NewDeaths.csv' id='NewDeaths.csv_84BCC04EF75845FD880DBDAA610C9071'>
            <properties context=''>
              <relation connection='textscan.12yphig1bsvobk1cut9g91czdpg0' name='NewDeaths.csv' table='[NewDeaths#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='integer' name='Africa' ordinal='1' />
                  <column datatype='integer' name='Asia' ordinal='2' />
                  <column datatype='integer' name='Australia/Oceania' ordinal='3' />
                  <column datatype='integer' name='Europe' ordinal='4' />
                  <column datatype='integer' name='North America' ordinal='5' />
                  <column datatype='integer' name='South America' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='NewCases' inline='true' name='federated.0tkez1o1h0fw6e1ah7m4e01aadih' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='NewCases' name='textscan.0093bf21fl917c19ktmq81ac4082'>
            <connection class='textscan' directory='G:/Nam3/HKII/TQH/lab2' filename='NewCases.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0093bf21fl917c19ktmq81ac4082' name='NewCases.csv' table='[NewCases#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Africa' ordinal='1' />
            <column datatype='integer' name='Asia' ordinal='2' />
            <column datatype='integer' name='Australia/Oceania' ordinal='3' />
            <column datatype='integer' name='Europe' ordinal='4' />
            <column datatype='integer' name='North America' ordinal='5' />
            <column datatype='integer' name='South America' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0093bf21fl917c19ktmq81ac4082' name='NewCases.csv' table='[NewCases#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Africa' ordinal='1' />
            <column datatype='integer' name='Asia' ordinal='2' />
            <column datatype='integer' name='Australia/Oceania' ordinal='3' />
            <column datatype='integer' name='Europe' ordinal='4' />
            <column datatype='integer' name='North America' ordinal='5' />
            <column datatype='integer' name='South America' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[NewCases.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[NewCases.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NewCases.csv_1B4F149445D3444FB937E37B960C321D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Africa</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Africa]</local-name>
            <parent-name>[NewCases.csv]</parent-name>
            <remote-alias>Africa</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NewCases.csv_1B4F149445D3444FB937E37B960C321D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Asia</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Asia]</local-name>
            <parent-name>[NewCases.csv]</parent-name>
            <remote-alias>Asia</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NewCases.csv_1B4F149445D3444FB937E37B960C321D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Australia/Oceania</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Australia/Oceania]</local-name>
            <parent-name>[NewCases.csv]</parent-name>
            <remote-alias>Australia/Oceania</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NewCases.csv_1B4F149445D3444FB937E37B960C321D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Europe</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Europe]</local-name>
            <parent-name>[NewCases.csv]</parent-name>
            <remote-alias>Europe</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NewCases.csv_1B4F149445D3444FB937E37B960C321D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>North America</remote-name>
            <remote-type>20</remote-type>
            <local-name>[North America]</local-name>
            <parent-name>[NewCases.csv]</parent-name>
            <remote-alias>North America</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NewCases.csv_1B4F149445D3444FB937E37B960C321D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>South America</remote-name>
            <remote-type>20</remote-type>
            <local-name>[South America]</local-name>
            <parent-name>[NewCases.csv]</parent-name>
            <remote-alias>South America</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NewCases.csv_1B4F149445D3444FB937E37B960C321D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Africa]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Asia]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Australia/Oceania]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Europe]' role='measure' type='quantitative' />
      <column datatype='integer' name='[North America]' role='measure' type='quantitative' />
      <column datatype='integer' name='[South America]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='NewCases.csv' datatype='table' name='[__tableau_internal_object_id__].[NewCases.csv_1B4F149445D3444FB937E37B960C321D]' role='measure' type='quantitative' />
      <column-instance column='[Africa]' derivation='Sum' name='[sum:Africa:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Asia]' derivation='Sum' name='[sum:Asia:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Australia/Oceania]' derivation='Sum' name='[sum:Australia/Oceania:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Europe]' derivation='Sum' name='[sum:Europe:qk]' pivot='key' type='quantitative' />
      <column-instance column='[North America]' derivation='Sum' name='[sum:North America:qk]' pivot='key' type='quantitative' />
      <column-instance column='[South America]' derivation='Sum' name='[sum:South America:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#06237a'>
              <bucket>&quot;[federated.0tkez1o1h0fw6e1ah7m4e01aadih].[sum:Europe:qk]&quot;</bucket>
            </map>
            <map to='#0e6ece'>
              <bucket>&quot;[federated.0tkez1o1h0fw6e1ah7m4e01aadih].[sum:Africa:qk]&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;[federated.0tkez1o1h0fw6e1ah7m4e01aadih].[sum:Asia:qk]&quot;</bucket>
            </map>
            <map to='#bda4e3'>
              <bucket>&quot;[federated.0tkez1o1h0fw6e1ah7m4e01aadih].[sum:Australia/Oceania:qk]&quot;</bucket>
            </map>
            <map to='#c3638a'>
              <bucket>&quot;[federated.0tkez1o1h0fw6e1ah7m4e01aadih].[sum:North America:qk]&quot;</bucket>
            </map>
            <map to='#d6de31'>
              <bucket>&quot;[federated.0tkez1o1h0fw6e1ah7m4e01aadih].[sum:South America:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='NewCases.csv' id='NewCases.csv_1B4F149445D3444FB937E37B960C321D'>
            <properties context=''>
              <relation connection='textscan.0093bf21fl917c19ktmq81ac4082' name='NewCases.csv' table='[NewCases#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='integer' name='Africa' ordinal='1' />
                  <column datatype='integer' name='Asia' ordinal='2' />
                  <column datatype='integer' name='Australia/Oceania' ordinal='3' />
                  <column datatype='integer' name='Europe' ordinal='4' />
                  <column datatype='integer' name='North America' ordinal='5' />
                  <column datatype='integer' name='South America' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Covid19-1-5' inline='true' name='federated.1u6rptd1mucyvc16p7nca02lkflg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Covid19-1-5' name='textscan.0uhfylv042g4mj11kfoql1fxyuo3'>
            <connection class='textscan' directory='G:/Nam3/HKII/TQH/lab2' filename='Covid19-1-5.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0uhfylv042g4mj11kfoql1fxyuo3' name='Covid19-1-5.csv' table='[Covid19-1-5#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='real' name='#' ordinal='0' />
            <column datatype='string' name='Country,Other' ordinal='1' />
            <column datatype='integer' name='TotalCases' ordinal='2' />
            <column datatype='integer' name='NewCases' ordinal='3' />
            <column datatype='integer' name='TotalDeaths' ordinal='4' />
            <column datatype='real' name='NewDeaths' ordinal='5' />
            <column datatype='integer' name='TotalRecovered' ordinal='6' />
            <column datatype='integer' name='NewRecovered' ordinal='7' />
            <column datatype='integer' name='ActiveCases' ordinal='8' />
            <column datatype='integer' name='Serious,Critical' ordinal='9' />
            <column datatype='integer' name='TotalCases/1M pop' ordinal='10' />
            <column datatype='real' name='Deaths/1M pop' ordinal='11' />
            <column datatype='integer' name='TotalTests' ordinal='12' />
            <column datatype='integer' name='Tests/1M pop' ordinal='13' />
            <column datatype='integer' name='Population' ordinal='14' />
            <column datatype='string' name='Continent' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0uhfylv042g4mj11kfoql1fxyuo3' name='Covid19-1-5.csv' table='[Covid19-1-5#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='real' name='#' ordinal='0' />
            <column datatype='string' name='Country,Other' ordinal='1' />
            <column datatype='integer' name='TotalCases' ordinal='2' />
            <column datatype='integer' name='NewCases' ordinal='3' />
            <column datatype='integer' name='TotalDeaths' ordinal='4' />
            <column datatype='real' name='NewDeaths' ordinal='5' />
            <column datatype='integer' name='TotalRecovered' ordinal='6' />
            <column datatype='integer' name='NewRecovered' ordinal='7' />
            <column datatype='integer' name='ActiveCases' ordinal='8' />
            <column datatype='integer' name='Serious,Critical' ordinal='9' />
            <column datatype='integer' name='TotalCases/1M pop' ordinal='10' />
            <column datatype='real' name='Deaths/1M pop' ordinal='11' />
            <column datatype='integer' name='TotalTests' ordinal='12' />
            <column datatype='integer' name='Tests/1M pop' ordinal='13' />
            <column datatype='integer' name='Population' ordinal='14' />
            <column datatype='string' name='Continent' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Covid19-1-5.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>#</remote-name>
            <remote-type>5</remote-type>
            <local-name>[#]</local-name>
            <parent-name>[Covid19-1-5.csv]</parent-name>
            <remote-alias>#</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid19-1-5.csv_A5BE9004A1164C00AA6375906E1FAFDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country,Other</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country,Other]</local-name>
            <parent-name>[Covid19-1-5.csv]</parent-name>
            <remote-alias>Country,Other</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid19-1-5.csv_A5BE9004A1164C00AA6375906E1FAFDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalCases]</local-name>
            <parent-name>[Covid19-1-5.csv]</parent-name>
            <remote-alias>TotalCases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid19-1-5.csv_A5BE9004A1164C00AA6375906E1FAFDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewCases]</local-name>
            <parent-name>[Covid19-1-5.csv]</parent-name>
            <remote-alias>NewCases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid19-1-5.csv_A5BE9004A1164C00AA6375906E1FAFDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeaths]</local-name>
            <parent-name>[Covid19-1-5.csv]</parent-name>
            <remote-alias>TotalDeaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid19-1-5.csv_A5BE9004A1164C00AA6375906E1FAFDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewDeaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NewDeaths]</local-name>
            <parent-name>[Covid19-1-5.csv]</parent-name>
            <remote-alias>NewDeaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid19-1-5.csv_A5BE9004A1164C00AA6375906E1FAFDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalRecovered]</local-name>
            <parent-name>[Covid19-1-5.csv]</parent-name>
            <remote-alias>TotalRecovered</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid19-1-5.csv_A5BE9004A1164C00AA6375906E1FAFDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewRecovered]</local-name>
            <parent-name>[Covid19-1-5.csv]</parent-name>
            <remote-alias>NewRecovered</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid19-1-5.csv_A5BE9004A1164C00AA6375906E1FAFDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ActiveCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ActiveCases]</local-name>
            <parent-name>[Covid19-1-5.csv]</parent-name>
            <remote-alias>ActiveCases</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid19-1-5.csv_A5BE9004A1164C00AA6375906E1FAFDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Serious,Critical</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Serious,Critical]</local-name>
            <parent-name>[Covid19-1-5.csv]</parent-name>
            <remote-alias>Serious,Critical</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid19-1-5.csv_A5BE9004A1164C00AA6375906E1FAFDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalCases/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalCases/1M pop]</local-name>
            <parent-name>[Covid19-1-5.csv]</parent-name>
            <remote-alias>TotalCases/1M pop</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid19-1-5.csv_A5BE9004A1164C00AA6375906E1FAFDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths/1M pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths/1M pop]</local-name>
            <parent-name>[Covid19-1-5.csv]</parent-name>
            <remote-alias>Deaths/1M pop</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid19-1-5.csv_A5BE9004A1164C00AA6375906E1FAFDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalTests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalTests]</local-name>
            <parent-name>[Covid19-1-5.csv]</parent-name>
            <remote-alias>TotalTests</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid19-1-5.csv_A5BE9004A1164C00AA6375906E1FAFDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests/1M pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tests/1M pop]</local-name>
            <parent-name>[Covid19-1-5.csv]</parent-name>
            <remote-alias>Tests/1M pop</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid19-1-5.csv_A5BE9004A1164C00AA6375906E1FAFDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Covid19-1-5.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid19-1-5.csv_A5BE9004A1164C00AA6375906E1FAFDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[Covid19-1-5.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid19-1-5.csv_A5BE9004A1164C00AA6375906E1FAFDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Active Cases' datatype='integer' name='[ActiveCases]' role='measure' type='quantitative' />
      <column caption='Regression1' datatype='real' name='[Calculation_144396702241005569]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&#13;&#10;&apos;&#13;&#10;import numpy as np&#13;&#10;from sklearn import linear_model&#13;&#10;clf = linear_model.LinearRegression()&#13;&#10;x=np.transpose(np.array([_arg1]))&#13;&#10;y=np.array(_arg2)&#13;&#10;clf.fit(x,y)&#13;&#10;return clf.predict(x).tolist()&#13;&#10;&apos;,&#13;&#10;SUM([TotalDeaths]),&#13;&#10;SUM([Serious,Critical])&#13;&#10;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='reg2' datatype='real' name='[Calculation_144396702267539460]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&#13;&#10;&apos;&#13;&#10;import numpy as np&#13;&#10;from sklearn import linear_model&#13;&#10;clf = linear_model.LinearRegression()&#13;&#10;x=np.transpose(np.array([_arg1]))&#13;&#10;y=np.array(_arg2)&#13;&#10;clf.fit(x,y)&#13;&#10;return clf.predict(x).tolist()&#13;&#10;&apos;,&#13;&#10;SUM([TotalCases]),&#13;&#10;SUM([TotalDeaths])&#13;&#10;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
      <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='None' caption='Deaths/1M pop (bin)' datatype='integer' name='[Deaths/1M pop (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='2' formula='[Deaths/1M pop]' peg='0' size='500' />
      </column>
      <column datatype='real' name='[Deaths/1M pop]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[NewCases]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='real' name='[NewDeaths]' role='measure' type='quantitative' />
      <column caption='New Recovered' datatype='integer' name='[NewRecovered]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Serious,Critical (copy)' datatype='integer' name='[Serious,Critical (copy)_144396702266040322]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Serious,Critical]' />
      </column>
      <column datatype='integer' name='[Serious,Critical]' role='measure' type='quantitative' />
      <column aggregation='None' caption='Tests/1M pop (bin)' datatype='integer' name='[Tests/1M pop (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='4' formula='[Tests/1M pop]' peg='0' size='1e+06' />
      </column>
      <column datatype='integer' name='[Tests/1M pop]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Total Deaths (copy)' datatype='integer' name='[Total Deaths (copy)_144396702240854016]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[TotalDeaths]' />
      </column>
      <column aggregation='None' caption='TotalCases/1M pop (bin)' datatype='integer' name='[TotalCases/1M pop (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='4' formula='[TotalCases/1M pop]' peg='0' size-parameter='[Parameters].[TotalCases/1M pop (bin) Parameter 3]' />
      </column>
      <column datatype='integer' name='[TotalCases/1M pop]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
      <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[TotalTests]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Covid19-1-5.csv' datatype='table' name='[__tableau_internal_object_id__].[Covid19-1-5.csv_A5BE9004A1164C00AA6375906E1FAFDA]' role='measure' type='quantitative' />
      <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
      <column-instance column='[ActiveCases]' derivation='Sum' name='[sum:ActiveCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NewCases]' derivation='Sum' name='[sum:NewCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NewDeaths]' derivation='Sum' name='[sum:NewDeaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NewRecovered]' derivation='Sum' name='[sum:NewRecovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Serious,Critical (copy)_144396702266040322]' derivation='Sum' name='[sum:Serious,Critical (copy)_144396702266040322:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Serious,Critical]' derivation='Sum' name='[sum:Serious,Critical:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Deaths (copy)_144396702240854016]' derivation='Sum' name='[sum:Total Deaths (copy)_144396702240854016:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalRecovered]' derivation='Sum' name='[sum:TotalRecovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalTests]' derivation='Sum' name='[sum:TotalTests:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_144396702241005569]' derivation='User' name='[usr:Calculation_144396702241005569:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1u6rptd1mucyvc16p7nca02lkflg].[Total Deaths (copy)_144396702240854016]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_144396702241005569]' derivation='User' name='[usr:Calculation_144396702241005569:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1u6rptd1mucyvc16p7nca02lkflg].[Serious,Critical (copy)_144396702266040322]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_144396702241005569]' derivation='User' name='[usr:Calculation_144396702241005569:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_144396702267539460]' derivation='User' name='[usr:Calculation_144396702267539460:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1u6rptd1mucyvc16p7nca02lkflg].[Total Deaths (copy)_144396702240854016]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_144396702267539460]' derivation='User' name='[usr:Calculation_144396702267539460:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1u6rptd1mucyvc16p7nca02lkflg].[Serious,Critical (copy)_144396702266040322]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_144396702267539460]' derivation='User' name='[usr:Calculation_144396702267539460:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.836364' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.163636' rowDisplayCount='1000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country,Other:nk]' type='palette'>
            <map to='#051c61'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;UAE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DRC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9e3d22'>
              <bucket>&quot;S. Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CAR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St. Barth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Pierre Miquelon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St. Vincent Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turks and Caicos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#9d53f2'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;All&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Australia/Oceania&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;The remaining areas&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:NewDeaths:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalRecovered:qk]&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:Serious,Critical (copy)_144396702266040322:qk]&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:Total Deaths (copy)_144396702240854016:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:Serious,Critical:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[usr:Calculation_144396702241005569:qk:2]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[usr:Calculation_144396702241005569:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalCases:qk]&quot;</bucket>
            </map>
            <map to='#d49d81'>
              <bucket>&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:ActiveCases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:NewRecovered:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[usr:Calculation_144396702267539460:qk:3]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[usr:Calculation_144396702267539460:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalTests:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[usr:Calculation_144396702241005569:qk:3]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:NewCases:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[usr:Calculation_144396702267539460:qk:2]&quot;</bucket>
            </map>
            <map to='#f3f300'>
              <bucket>&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalDeaths:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Viet Nam&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='TotalCases/1M pop (bin) Parameter 3' datatype='real' name='[TotalCases/1M pop (bin) Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='100000.'>
          <calculation class='tableau' formula='100000.' />
          <range granularity='100000.0' max='176100.5' min='100000.0' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Covid19-1-5.csv' id='Covid19-1-5.csv_A5BE9004A1164C00AA6375906E1FAFDA'>
            <properties context=''>
              <relation connection='textscan.0uhfylv042g4mj11kfoql1fxyuo3' name='Covid19-1-5.csv' table='[Covid19-1-5#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='real' name='#' ordinal='0' />
                  <column datatype='string' name='Country,Other' ordinal='1' />
                  <column datatype='integer' name='TotalCases' ordinal='2' />
                  <column datatype='integer' name='NewCases' ordinal='3' />
                  <column datatype='integer' name='TotalDeaths' ordinal='4' />
                  <column datatype='real' name='NewDeaths' ordinal='5' />
                  <column datatype='integer' name='TotalRecovered' ordinal='6' />
                  <column datatype='integer' name='NewRecovered' ordinal='7' />
                  <column datatype='integer' name='ActiveCases' ordinal='8' />
                  <column datatype='integer' name='Serious,Critical' ordinal='9' />
                  <column datatype='integer' name='TotalCases/1M pop' ordinal='10' />
                  <column datatype='real' name='Deaths/1M pop' ordinal='11' />
                  <column datatype='integer' name='TotalTests' ordinal='12' />
                  <column datatype='integer' name='Tests/1M pop' ordinal='13' />
                  <column datatype='integer' name='Population' ordinal='14' />
                  <column datatype='string' name='Continent' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1_9BF8DE7972AD42AD96ACAC215EB4A570]'>
      <activation type='on-select' />
      <source dashboard='Dashboard_time' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard_time' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Barh Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Biểu đồ top 10 quốc gia có tổng số ca nhiễm COVID cao nhất trên thế giới tại ngày 1/5/2022</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19-1-5' name='federated.1u6rptd1mucyvc16p7nca02lkflg' />
          </datasources>
          <datasource-dependencies datasource='federated.1u6rptd1mucyvc16p7nca02lkflg'>
            <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([TotalCases])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country,Other:nk]' to='&quot;Western Sahara&quot;' />
                  <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:Country,Other:nk]' to='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalCases:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]' value='55' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]' value='136' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]</rows>
        <cols>[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalCases:qk]</cols>
      </table>
      <simple-id uuid='{2A9C366D-5C79-4315-AA34-E2B98A09F43E}' />
    </worksheet>
    <worksheet name='Box Plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19-1-5' name='federated.1u6rptd1mucyvc16p7nca02lkflg' />
          </datasources>
          <datasource-dependencies datasource='federated.1u6rptd1mucyvc16p7nca02lkflg'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='integer' name='[TotalCases/1M pop]' role='measure' type='quantitative' />
            <column-instance column='[TotalCases/1M pop]' derivation='Avg' name='[avg:TotalCases/1M pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Africa&quot;' />
              <groupfilter from='&quot;Asia&quot;' function='range' level='[none:Continent:nk]' to='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1u6rptd1mucyvc16p7nca02lkflg].[avg:TotalCases/1M pop:qk]' field-type='quantitative' major-origin='0.0' major-spacing='100000.0' max='775877.68273449549' min='-25668.203202828649' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]' value='94' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='palette' id='refline0' value='bp_brightblue' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[avg:TotalCases/1M pop:qk]' boxplot-mark-exclusion='true' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[avg:TotalCases/1M pop:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.18591159582138062' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1u6rptd1mucyvc16p7nca02lkflg].[avg:TotalCases/1M pop:qk]</rows>
        <cols>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]</cols>
      </table>
      <simple-id uuid='{B8927E43-09C1-4A11-B150-E15350C47703}' />
    </worksheet>
    <worksheet name='Bubble Plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19-1-5' name='federated.1u6rptd1mucyvc16p7nca02lkflg' />
          </datasources>
          <datasource-dependencies datasource='federated.1u6rptd1mucyvc16p7nca02lkflg'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Tests' datatype='integer' name='[TotalTests]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalTests]' derivation='Sum' name='[sum:TotalTests:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Africa&quot;' />
              <groupfilter from='&quot;Asia&quot;' function='range' level='[none:Continent:nk]' to='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]' />
              <size column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:Population:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='3.1270718574523926' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1078' />
                <format attr='maxwidth' value='1078' />
                <format attr='minheight' value='640' />
                <format attr='maxheight' value='640' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalTests:qk]</rows>
        <cols>[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalCases:qk]</cols>
      </table>
      <simple-id uuid='{4849EB30-AE74-40A6-BCFC-04A4C4913A31}' />
    </worksheet>
    <worksheet name='Heat Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19-1-5' name='federated.1u6rptd1mucyvc16p7nca02lkflg' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1u6rptd1mucyvc16p7nca02lkflg'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='New Cases' datatype='integer' name='[NewCases]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='real' name='[NewDeaths]' role='measure' type='quantitative' />
            <column caption='New Recovered' datatype='integer' name='[NewRecovered]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Serious,Critical]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[NewCases]' derivation='Sum' name='[sum:NewCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NewDeaths]' derivation='Sum' name='[sum:NewDeaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NewRecovered]' derivation='Sum' name='[sum:NewRecovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Serious,Critical]' derivation='Sum' name='[sum:Serious,Critical:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:NewDeaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:NewCases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:NewRecovered:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:Serious,Critical:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:NewDeaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:NewCases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:NewRecovered:qk]&quot;</bucket>
              <bucket>&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:Serious,Critical:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Africa&quot;' />
              <groupfilter from='&quot;Asia&quot;' function='range' level='[none:Continent:nk]' to='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]</column>
            <column>[federated.1u6rptd1mucyvc16p7nca02lkflg].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1u6rptd1mucyvc16p7nca02lkflg].[:Measure Names]' value='111' />
            <format attr='height' field='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]' value='27' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:NewRecovered:qk]' num-steps='5' palette='blue_teal_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1u6rptd1mucyvc16p7nca02lkflg].[Multiple Values]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d6dee6</color>
                <color>#beccdb</color>
                <color>#a6bbd0</color>
                <color>#90abc5</color>
                <color>#7c9cbb</color>
                <color>#698db0</color>
                <color>#577fa5</color>
                <color>#47719a</color>
                <color>#39648f</color>
                <color>#2c5985</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[Multiple Values]' />
              <text column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]</rows>
        <cols>[federated.1u6rptd1mucyvc16p7nca02lkflg].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{0C10BA9E-002D-4BB8-A299-5CA1F4D920B0}' />
    </worksheet>
    <worksheet name='Histogram_Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Biểu đồ thống kê số lượng quốc gia theo số lượng ca tử vong/ 1 triệu dân</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19-1-5' name='federated.1u6rptd1mucyvc16p7nca02lkflg' />
          </datasources>
          <datasource-dependencies datasource='federated.1u6rptd1mucyvc16p7nca02lkflg'>
            <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='None' caption='Deaths/1M pop (bin)' datatype='integer' name='[Deaths/1M pop (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='2' formula='[Deaths/1M pop]' peg='0' size='500' />
            </column>
            <column datatype='real' name='[Deaths/1M pop]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='Count' name='[cnt:Country,Other:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths/1M pop (bin)]' derivation='None' name='[none:Deaths/1M pop (bin):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country,Other:nk]' to='&quot;Western Sahara&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:Country,Other:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[cnt:Country,Other:qk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='false' y-axis='true' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#1f7cf5' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1u6rptd1mucyvc16p7nca02lkflg].[cnt:Country,Other:qk]</rows>
        <cols>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Deaths/1M pop (bin):ok]</cols>
      </table>
      <simple-id uuid='{D24D2355-2BC6-4352-9455-CE3BFE534060}' />
    </worksheet>
    <worksheet name='Histogram_Tests'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Biểu đồ thống kê số lượng quốc gia theo số lượng ca test/ 1 triệu dân</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19-1-5' name='federated.1u6rptd1mucyvc16p7nca02lkflg' />
          </datasources>
          <datasource-dependencies datasource='federated.1u6rptd1mucyvc16p7nca02lkflg'>
            <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='None' caption='Tests/1M pop (bin)' datatype='integer' name='[Tests/1M pop (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[Tests/1M pop]' peg='0' size='1e+06' />
            </column>
            <column datatype='integer' name='[Tests/1M pop]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='Count' name='[cnt:Country,Other:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='CountD' name='[ctd:Country,Other:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tests/1M pop (bin)]' derivation='None' name='[none:Tests/1M pop (bin):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country,Other:nk]' to='&quot;Western Sahara&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:Country,Other:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[ctd:Country,Other:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1u6rptd1mucyvc16p7nca02lkflg].[cnt:Country,Other:qk]</rows>
        <cols>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Tests/1M pop (bin):ok]</cols>
      </table>
      <simple-id uuid='{2948B208-5DEC-4838-84A5-57D26704F76A}' />
    </worksheet>
    <worksheet name='Histogram_TotalCases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Biểu đồ thống kê số lượng quốc gia theo số lượng ca nhiễm/ 1 triệu dân</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19-1-5' name='federated.1u6rptd1mucyvc16p7nca02lkflg' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='TotalCases/1M pop (bin) Parameter 3' datatype='real' name='[TotalCases/1M pop (bin) Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='100000.'>
              <calculation class='tableau' formula='100000.' />
              <range granularity='100000.0' max='176100.5' min='100000.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1u6rptd1mucyvc16p7nca02lkflg'>
            <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='None' caption='TotalCases/1M pop (bin)' datatype='integer' name='[TotalCases/1M pop (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[TotalCases/1M pop]' peg='0' size-parameter='[Parameters].[TotalCases/1M pop (bin) Parameter 3]' />
            </column>
            <column datatype='integer' name='[TotalCases/1M pop]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='Count' name='[cnt:Country,Other:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalCases/1M pop (bin)]' derivation='None' name='[none:TotalCases/1M pop (bin):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country,Other:nk]' to='&quot;Western Sahara&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:Country,Other:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[cnt:Country,Other:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ff5500' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='798' />
                <format attr='maxwidth' value='798' />
                <format attr='minheight' value='640' />
                <format attr='maxheight' value='640' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1u6rptd1mucyvc16p7nca02lkflg].[cnt:Country,Other:qk]</rows>
        <cols>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:TotalCases/1M pop (bin):ok]</cols>
        <show-full-range>
          <column>[federated.1u6rptd1mucyvc16p7nca02lkflg].[TotalCases/1M pop (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{4DA9C59F-E20A-4A6C-8DCA-A39D0C1E70BC}' />
    </worksheet>
    <worksheet name='Maps'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19-1-5' name='federated.1u6rptd1mucyvc16p7nca02lkflg' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1u6rptd1mucyvc16p7nca02lkflg'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]'>
            <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Asia&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1u6rptd1mucyvc16p7nca02lkflg].[Longitude (generated)]' field-type='quantitative' max='17984842.747436404' min='285561.86388716055' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1u6rptd1mucyvc16p7nca02lkflg].[Latitude (generated)]' field-type='quantitative' max='7427320.6437724289' min='-2888076.0988377938' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalCases:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalDeaths:qk]' />
              <text column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]' />
              <lod column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]' />
              <lod column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalCases:qk]' />
              <lod column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalDeaths:qk]' />
              <geometry column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.2853591442108154' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1u6rptd1mucyvc16p7nca02lkflg].[Latitude (generated)]</rows>
        <cols>[federated.1u6rptd1mucyvc16p7nca02lkflg].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{0D37810C-CD3F-4BFD-80BA-E68AD83FA1EA}' />
    </worksheet>
    <worksheet name='Packed Bubbles'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19-1-5' name='federated.1u6rptd1mucyvc16p7nca02lkflg' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1u6rptd1mucyvc16p7nca02lkflg'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='New Cases' datatype='integer' name='[NewCases]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[NewCases]' derivation='Sum' name='[sum:NewCases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Africa&quot;' />
              <groupfilter from='&quot;Asia&quot;' function='range' level='[none:Continent:nk]' to='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country,Other:nk]' to='&quot;Western Sahara&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:Country,Other:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]</column>
            <column>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]' />
              <size column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:NewCases:qk]' />
              <text column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{765633EF-5279-42B4-AC67-1975B905D70D}' />
    </worksheet>
    <worksheet name='Pie Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Biểu đồ biểu thị tỉ lệ tổng số ca nhiễm COVID của 6 châu lục tại thời điểm 1/5/2022 (%)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19-1-5' name='federated.1u6rptd1mucyvc16p7nca02lkflg' />
          </datasources>
          <datasource-dependencies datasource='federated.1u6rptd1mucyvc16p7nca02lkflg'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[pcto:sum:TotalCases:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Africa&quot;' />
              <groupfilter from='&quot;Asia&quot;' function='range' level='[none:Continent:nk]' to='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]' />
              <wedge-size column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalCases:qk]' />
              <size column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalCases:qk]' />
              <text column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]' />
              <text column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[pcto:sum:TotalCases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E36F6B0A-233A-4812-BA77-9E10FAF5EB02}' />
    </worksheet>
    <worksheet name='Sccater'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19-1-5' name='federated.1u6rptd1mucyvc16p7nca02lkflg' />
          </datasources>
          <datasource-dependencies datasource='federated.1u6rptd1mucyvc16p7nca02lkflg'>
            <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Serious,Critical]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[Serious,Critical]' derivation='Sum' name='[sum:Serious,Critical:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country,Other:nk]' to='&quot;Western Sahara&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:Country,Other:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:Serious,Critical:qk]' field-type='quantitative' major-origin='0' major-spacing='1000' max='10000' min='-459' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalDeaths:qk]' field-type='quantitative' major-origin='0' major-spacing='200000' max='1200000' min='-179532' range-type='fixed' scope='rows' type='space' />
            <format attr='width' field='[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalDeaths:qk]' value='88' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]' />
              <text column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='806' />
                <format attr='maxwidth' value='806' />
                <format attr='minheight' value='640' />
                <format attr='maxheight' value='640' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalDeaths:qk]</rows>
        <cols>[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:Serious,Critical:qk]</cols>
      </table>
      <simple-id uuid='{B6726B0E-A933-4851-82C0-F633BAE3CC3F}' />
    </worksheet>
    <worksheet name='Stacked Bar Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19-1-5' name='federated.1u6rptd1mucyvc16p7nca02lkflg' />
          </datasources>
          <datasource-dependencies datasource='federated.1u6rptd1mucyvc16p7nca02lkflg'>
            <column caption='Active Cases' datatype='integer' name='[ActiveCases]' role='measure' type='quantitative' />
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[ActiveCases]' derivation='Sum' name='[sum:ActiveCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalRecovered]' derivation='Sum' name='[sum:TotalRecovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalDeaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:ActiveCases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalRecovered:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalDeaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:ActiveCases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalRecovered:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Africa&quot;' />
              <groupfilter from='&quot;Asia&quot;' function='range' level='[none:Continent:nk]' to='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1u6rptd1mucyvc16p7nca02lkflg].[:Measure Names]</column>
            <column>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1u6rptd1mucyvc16p7nca02lkflg].[Multiple Values]</rows>
        <cols>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]</cols>
      </table>
      <simple-id uuid='{F0CA0C3D-D420-477D-A396-99C6F222D98D}' />
    </worksheet>
    <worksheet name='Treemaps'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19-1-5' name='federated.1u6rptd1mucyvc16p7nca02lkflg' />
          </datasources>
          <datasource-dependencies datasource='federated.1u6rptd1mucyvc16p7nca02lkflg'>
            <column caption='Active Cases' datatype='integer' name='[ActiveCases]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country,Other]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
            <column-instance column='[Country,Other]' derivation='None' name='[none:Country,Other:nk]' pivot='key' type='nominal' />
            <column-instance column='[ActiveCases]' derivation='Sum' name='[sum:ActiveCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalRecovered]' derivation='Sum' name='[sum:TotalRecovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country,Other:nk]' to='&quot;Western Sahara&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:Country,Other:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:ActiveCases:qk]' />
              <color column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:ActiveCases:qk]' />
              <text column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]' />
              <text column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalCases:qk]' />
              <text column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:ActiveCases:qk]' />
              <text column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalRecovered:qk]' />
              <text column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalDeaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7E20A214-6869-4186-B2BA-8FF6570A6D7A}' />
    </worksheet>
    <worksheet name='linear_reg'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Biểu đồ thể hiện sự tương quan giữa Total Deaths và Serious,Critical</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19-1-5' name='federated.1u6rptd1mucyvc16p7nca02lkflg' />
          </datasources>
          <datasource-dependencies datasource='federated.1u6rptd1mucyvc16p7nca02lkflg'>
            <column caption='Regression1' datatype='real' name='[Calculation_144396702241005569]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&#13;&#10;&apos;&#13;&#10;import numpy as np&#13;&#10;from sklearn import linear_model&#13;&#10;clf = linear_model.LinearRegression()&#13;&#10;x=np.transpose(np.array([_arg1]))&#13;&#10;y=np.array(_arg2)&#13;&#10;clf.fit(x,y)&#13;&#10;return clf.predict(x).tolist()&#13;&#10;&apos;,&#13;&#10;SUM([TotalDeaths]),&#13;&#10;SUM([Serious,Critical])&#13;&#10;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='Sum' caption='Serious,Critical (copy)' datatype='integer' name='[Serious,Critical (copy)_144396702266040322]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Serious,Critical]' />
            </column>
            <column datatype='integer' name='[Serious,Critical]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column-instance column='[Serious,Critical (copy)_144396702266040322]' derivation='None' name='[none:Serious,Critical (copy)_144396702266040322:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Serious,Critical (copy)_144396702266040322]' derivation='Sum' name='[sum:Serious,Critical (copy)_144396702266040322:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_144396702241005569]' derivation='User' name='[usr:Calculation_144396702241005569:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1u6rptd1mucyvc16p7nca02lkflg].[Serious,Critical (copy)_144396702266040322]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:Serious,Critical (copy)_144396702266040322:qk]' value='60' />
            <format attr='width' field='[federated.1u6rptd1mucyvc16p7nca02lkflg].[usr:Calculation_144396702241005569:qk:3]' value='60' />
            <encoding attr='space' class='0' field='[federated.1u6rptd1mucyvc16p7nca02lkflg].[usr:Calculation_144396702241005569:qk:3]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[:Measure Names]' />
              <lod column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Serious,Critical (copy)_144396702266040322:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
                <format attr='size' value='1.4832596778869629' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:Serious,Critical (copy)_144396702266040322:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[:Measure Names]' />
              <lod column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Serious,Critical (copy)_144396702266040322:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
                <format attr='size' value='1.4832596778869629' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1u6rptd1mucyvc16p7nca02lkflg].[usr:Calculation_144396702241005569:qk:3]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[:Measure Names]' />
              <lod column='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Serious,Critical (copy)_144396702266040322:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
                <format attr='size' value='1.4832596778869629' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:Serious,Critical (copy)_144396702266040322:qk] + [federated.1u6rptd1mucyvc16p7nca02lkflg].[usr:Calculation_144396702241005569:qk:3])</rows>
        <cols>[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalDeaths:qk]</cols>
      </table>
      <simple-id uuid='{54A6CBE3-B1E2-45B6-AC6F-7E436EDAA055}' />
    </worksheet>
    <worksheet name='newcase_time'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Biểu đồ thể hiện sự thay đổi của số ca nhiễm mới từ 28/4/2022 - 6/5/2022 của các châu lục</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='NewCases' name='federated.0tkez1o1h0fw6e1ah7m4e01aadih' />
          </datasources>
          <datasource-dependencies datasource='federated.0tkez1o1h0fw6e1ah7m4e01aadih'>
            <column datatype='integer' name='[Africa]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Asia]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Australia/Oceania]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Europe]' role='measure' type='quantitative' />
            <column datatype='integer' name='[North America]' role='measure' type='quantitative' />
            <column datatype='integer' name='[South America]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Africa]' derivation='Sum' name='[sum:Africa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Asia]' derivation='Sum' name='[sum:Asia:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Australia/Oceania]' derivation='Sum' name='[sum:Australia/Oceania:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Europe]' derivation='Sum' name='[sum:Europe:qk]' pivot='key' type='quantitative' />
            <column-instance column='[North America]' derivation='Sum' name='[sum:North America:qk]' pivot='key' type='quantitative' />
            <column-instance column='[South America]' derivation='Sum' name='[sum:South America:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tkez1o1h0fw6e1ah7m4e01aadih].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0tkez1o1h0fw6e1ah7m4e01aadih].[sum:Africa:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0tkez1o1h0fw6e1ah7m4e01aadih].[sum:Asia:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0tkez1o1h0fw6e1ah7m4e01aadih].[sum:Australia/Oceania:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0tkez1o1h0fw6e1ah7m4e01aadih].[sum:Europe:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0tkez1o1h0fw6e1ah7m4e01aadih].[sum:North America:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0tkez1o1h0fw6e1ah7m4e01aadih].[sum:South America:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0tkez1o1h0fw6e1ah7m4e01aadih].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0tkez1o1h0fw6e1ah7m4e01aadih].[Multiple Values]' scope='rows' value='Total of New Cases' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tkez1o1h0fw6e1ah7m4e01aadih].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0tkez1o1h0fw6e1ah7m4e01aadih].[Multiple Values]</rows>
        <cols>[federated.0tkez1o1h0fw6e1ah7m4e01aadih].[none:Date:qk]</cols>
      </table>
      <simple-id uuid='{E44B57EF-434C-4843-9FFC-7FF578E49AAA}' />
    </worksheet>
    <worksheet name='newdeadths_time'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Biểu đồ thể hiện sự thay đổi của số ca tử vong mới từ 28/4/2022 - 6/5/2022 của các châu lục</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='NewDeaths' name='federated.0shcs75198btm017a11h90q3o8o7' />
          </datasources>
          <datasource-dependencies datasource='federated.0shcs75198btm017a11h90q3o8o7'>
            <column datatype='integer' name='[Africa]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Asia]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Australia/Oceania]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Europe]' role='measure' type='quantitative' />
            <column datatype='integer' name='[North America]' role='measure' type='quantitative' />
            <column datatype='integer' name='[South America]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Africa]' derivation='Sum' name='[sum:Africa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Asia]' derivation='Sum' name='[sum:Asia:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Australia/Oceania]' derivation='Sum' name='[sum:Australia/Oceania:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Europe]' derivation='Sum' name='[sum:Europe:qk]' pivot='key' type='quantitative' />
            <column-instance column='[North America]' derivation='Sum' name='[sum:North America:qk]' pivot='key' type='quantitative' />
            <column-instance column='[South America]' derivation='Sum' name='[sum:South America:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0shcs75198btm017a11h90q3o8o7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0shcs75198btm017a11h90q3o8o7].[sum:Africa:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0shcs75198btm017a11h90q3o8o7].[sum:Asia:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0shcs75198btm017a11h90q3o8o7].[sum:Australia/Oceania:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0shcs75198btm017a11h90q3o8o7].[sum:Europe:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0shcs75198btm017a11h90q3o8o7].[sum:North America:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0shcs75198btm017a11h90q3o8o7].[sum:South America:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0shcs75198btm017a11h90q3o8o7].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0shcs75198btm017a11h90q3o8o7].[Multiple Values]' scope='rows' value='Total of New Deaths' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0shcs75198btm017a11h90q3o8o7].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0shcs75198btm017a11h90q3o8o7].[Multiple Values]</rows>
        <cols>[federated.0shcs75198btm017a11h90q3o8o7].[none:Date:qk]</cols>
      </table>
      <simple-id uuid='{950CE74F-7A9B-4643-A293-D1466C2795BD}' />
    </worksheet>
    <worksheet name='newrecovered_time'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Biểu đồ thể hiện sự thay đổi của số ca hồi phục mới từ 28/4/2022 - 6/5/2022 của các châu lục</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='NewRecovered' name='federated.1efx2gr1oxqs6818ry6wb133suv2' />
          </datasources>
          <datasource-dependencies datasource='federated.1efx2gr1oxqs6818ry6wb133suv2'>
            <column datatype='integer' name='[Africa]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Asia]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Australia/Oceania]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Europe]' role='measure' type='quantitative' />
            <column datatype='integer' name='[North America]' role='measure' type='quantitative' />
            <column datatype='integer' name='[South America]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Africa]' derivation='Sum' name='[sum:Africa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Asia]' derivation='Sum' name='[sum:Asia:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Australia/Oceania]' derivation='Sum' name='[sum:Australia/Oceania:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Europe]' derivation='Sum' name='[sum:Europe:qk]' pivot='key' type='quantitative' />
            <column-instance column='[North America]' derivation='Sum' name='[sum:North America:qk]' pivot='key' type='quantitative' />
            <column-instance column='[South America]' derivation='Sum' name='[sum:South America:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1efx2gr1oxqs6818ry6wb133suv2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1efx2gr1oxqs6818ry6wb133suv2].[sum:Africa:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1efx2gr1oxqs6818ry6wb133suv2].[sum:Asia:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1efx2gr1oxqs6818ry6wb133suv2].[sum:Australia/Oceania:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1efx2gr1oxqs6818ry6wb133suv2].[sum:Europe:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1efx2gr1oxqs6818ry6wb133suv2].[sum:North America:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1efx2gr1oxqs6818ry6wb133suv2].[sum:South America:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1efx2gr1oxqs6818ry6wb133suv2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1efx2gr1oxqs6818ry6wb133suv2].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1efx2gr1oxqs6818ry6wb133suv2].[Multiple Values]</rows>
        <cols>[federated.1efx2gr1oxqs6818ry6wb133suv2].[none:Date:qk]</cols>
      </table>
      <simple-id uuid='{028999EF-3D96-4B41-ABC0-D3B9645F3982}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='DashboardHis'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='34000' id='3' name='Histogram_TotalCases' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='35500' id='5' name='Histogram_Deaths' w='98400' x='800' y='35000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='28500' id='6' name='Histogram_Tests' w='98400' x='800' y='70500'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='54' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='53' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='264' h='34000' id='3' is-fixed='true' name='Histogram_TotalCases' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='276' h='35500' id='5' is-fixed='true' name='Histogram_Deaths' w='98400' x='800' y='35000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='220' h='28500' id='6' is-fixed='true' name='Histogram_Tests' w='98400' x='800' y='70500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{39064D4E-30CF-4BFE-BF7E-6FC15E119E57}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard_time'>
      <style />
      <size maxheight='1300' maxwidth='1000' minheight='1300' minwidth='1000' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='20' type-v2='layout-basic' w='100000' x='0' y='0' />
        <zone h='30308' id='3' name='newcase_time' w='78300' x='3000' y='3231' />
        <zone h='28692' id='9' name='newdeadths_time' w='80800' x='2600' y='35846' />
        <zone h='32077' id='17' name='newrecovered_time' w='78800' x='3500' y='67385' />
        <zone fixed-size='216' h='10615' id='10' is-fixed='true' name='newdeadths_time' pane-specification-id='0' param='[federated.0shcs75198btm017a11h90q3o8o7].[:Measure Names]' type-v2='color' w='14000' x='84700' y='24923' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='34' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98770' id='33' param='vert' type-v2='layout-flow' w='98400' x='800' y='615'>
                <zone fixed-size='280' h='30308' id='3' is-fixed='true' name='newcase_time' w='78300' x='3000' y='3231'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='28692' id='9' is-fixed='true' name='newdeadths_time' w='80800' x='2600' y='35846'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='216' h='10615' id='10' name='newdeadths_time' pane-specification-id='0' param='[federated.0shcs75198btm017a11h90q3o8o7].[:Measure Names]' type-v2='color' w='14000' x='84700' y='24923'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='32077' id='17' is-fixed='true' name='newrecovered_time' w='78800' x='3500' y='67385'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1984F7B5-577D-4C57-95A6-C307AC1E781C}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='180'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalCases:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{D09AD0C1-32BA-4507-97C8-1EDE92229AC1}' />
    </window>
    <window class='worksheet' name='Barh Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2765FA7F-1B07-4A10-965B-C5DA2D6364E4}' />
    </window>
    <window class='worksheet' name='Histogram_TotalCases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{7F59D46B-C96D-4661-9397-3FAA23DCFCA3}' />
    </window>
    <window class='worksheet' name='Histogram_Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{502249BD-E1A6-49EA-B52B-F53A6D94CF7C}' />
    </window>
    <window class='worksheet' name='Histogram_Tests'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DAF19AC7-BD1D-47B5-90FA-339561AF1C84}' />
    </window>
    <window class='dashboard' name='DashboardHis'>
      <viewpoints>
        <viewpoint name='Histogram_Deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Histogram_Tests'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Histogram_TotalCases'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{5A535789-CFB9-4966-BBEA-3F77E3E8E7BC}' />
    </window>
    <window class='worksheet' name='Box Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3522A529-B0B1-4420-A967-E83A5D22FE83}' />
    </window>
    <window class='worksheet' name='Sccater'>
      <cards>
        <edge name='left'>
          <strip size='182'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7FB09D53-97B0-414C-BE19-24ED235BBC99}' />
    </window>
    <window class='worksheet' name='Heat Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1u6rptd1mucyvc16p7nca02lkflg].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card mode='checkdropdown' param='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1u6rptd1mucyvc16p7nca02lkflg].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1u6rptd1mucyvc16p7nca02lkflg].[:Measure Names]</field>
            <field>[federated.1u6rptd1mucyvc16p7nca02lkflg].[Multiple Values]</field>
            <field>[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:Serious,Critical:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E1C4439F-687D-445B-B8DC-1D7E2AD4A732}' />
    </window>
    <window class='worksheet' name='Bubble Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:Population:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]</field>
            <field>[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalTests:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B89EA219-5F13-4AD2-A927-DC874EB4D300}' />
    </window>
    <window class='worksheet' name='Maps'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card mode='checkdropdown' param='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalDeaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]</field>
            <field>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]</field>
            <field>[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:TotalCases:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4F8D91AD-6FFA-4DAD-99B4-E025282189DE}' />
    </window>
    <window class='worksheet' name='Packed Bubbles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]</field>
            <field>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D00E63B3-BF1A-491B-819E-4835E0C00DCA}' />
    </window>
    <window class='worksheet' name='Treemaps'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1u6rptd1mucyvc16p7nca02lkflg].[sum:ActiveCases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]</field>
            <field>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Country,Other:nk]</field>
            <field>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:New Cases (bin):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C6F1857B-1AF7-4FA5-9390-0562CB5EE746}' />
    </window>
    <window class='worksheet' name='newcase_time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0tkez1o1h0fw6e1ah7m4e01aadih].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tkez1o1h0fw6e1ah7m4e01aadih].[:Measure Names]</field>
            <field>[federated.0tkez1o1h0fw6e1ah7m4e01aadih].[yr:Date:ok]</field>
            <field>[federated.1t4fzsx0g77xyo1gffnxh1ni81jz].[yr:Date:ok]</field>
            <field>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Deaths/1M pop (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D935020B-6933-4D25-A2C1-B6725B4F8724}' />
    </window>
    <window class='worksheet' name='newdeadths_time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0shcs75198btm017a11h90q3o8o7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0shcs75198btm017a11h90q3o8o7].[:Measure Names]</field>
            <field>[federated.0shcs75198btm017a11h90q3o8o7].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DE7EDAE5-F64C-48DE-93C4-52637DFAB9CF}' />
    </window>
    <window class='worksheet' name='newrecovered_time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1efx2gr1oxqs6818ry6wb133suv2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1efx2gr1oxqs6818ry6wb133suv2].[:Measure Names]</field>
            <field>[federated.1efx2gr1oxqs6818ry6wb133suv2].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{99E429F5-ECD9-4C6D-B9D2-EA7B749D9354}' />
    </window>
    <window class='dashboard' name='Dashboard_time'>
      <viewpoints>
        <viewpoint name='newcase_time'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0tkez1o1h0fw6e1ah7m4e01aadih].[none:Date:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0tkez1o1h0fw6e1ah7m4e01aadih].[Multiple Values]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0tkez1o1h0fw6e1ah7m4e01aadih].[none:Date:qk]</field>
                    <field>[federated.0tkez1o1h0fw6e1ah7m4e01aadih].[:Measure Names]</field>
                    <field>[federated.0tkez1o1h0fw6e1ah7m4e01aadih].[Multiple Values]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>#2022-05-03#</value>
                  <value>&quot;[federated.0tkez1o1h0fw6e1ah7m4e01aadih].[sum:Europe:qk]&quot;</value>
                  <value>75784.0</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='newdeadths_time'>
          <zoom type='entire-view' />
          <highlight field='[federated.0shcs75198btm017a11h90q3o8o7].[:Measure Names]'>
            <color-one-way>
              <field>[federated.0shcs75198btm017a11h90q3o8o7].[:Measure Names]</field>
            </color-one-way>
            <bucket-selection>
              <bucket>&quot;[federated.0shcs75198btm017a11h90q3o8o7].[sum:Europe:qk]&quot;</bucket>
            </bucket-selection>
          </highlight>
        </viewpoint>
        <viewpoint name='newrecovered_time'>
          <zoom type='entire-view' />
          <highlight field='[federated.1efx2gr1oxqs6818ry6wb133suv2].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{26EBE4E0-33D5-4C2A-90B8-141A7FBDF254}' />
    </window>
    <window class='worksheet' maximized='true' name='linear_reg'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='8' param='[federated.1u6rptd1mucyvc16p7nca02lkflg].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1u6rptd1mucyvc16p7nca02lkflg].[usr:Calculation_144396702241005569:qk:3]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Serious,Critical (copy)_144396702266040322:ok]</field>
            <field>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Total Deaths (copy)_144396702240854016:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{07C306E1-AC49-425B-A318-10F7D0AC1E4D}' />
    </window>
    <window class='worksheet' name='Stacked Bar Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1u6rptd1mucyvc16p7nca02lkflg].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1u6rptd1mucyvc16p7nca02lkflg].[:Measure Names]</field>
            <field>[federated.1u6rptd1mucyvc16p7nca02lkflg].[none:Continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{647B5904-EE0E-4478-BB96-4DF5C83D6010}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Barh Chart' width='192'>
      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
      UJoUQCjt/wBr515tgHdx5wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Box Plot' width='192'>
      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
      X/E0BoOZ/w+aqRxT6zwL4gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Bubble Plot' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='DashboardHis' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard_time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Heat Map' width='192'>
      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
      cSiEpgcZqikgz5mLzewkq0LMM8C2l/8TL20z8cmlMfLynJitdpyaDcWZy6ZN5fiG/ZSXl5BM
      RijMtbNoy6GgbjsDFz/nq/gu/IEVnAXFOKwPntxU+iO73U59fT1tbW288MILXLx4kffee48D
      Bw7Q3Ny83sN77FKpFLOeGd7/7TscPHSYm12dpFJJUqk0uqGzqXEz27a3oGkae/ftp+38WQ4e
      PkJNTS1+/zIYxg+fHfppI2eHXp0/nBTihphoJILZYsFisTxwXXlHmPTMycl9+NnK5cegktBk
      AJLQZACS0GQAktBkAJLQZACS0GQAktBkAJLQZACS0GQAktBkAJLQ5LVAArFZNMyGfM/7NhmA
      QBQFVJT1HsZTRb4dSEKTAUhCkwFIQpMBSEKTAUhCkwFIQpMBSEKTAUhCkwFIQpMBSEKTAUhC
      006fPn36O9810nRcPEdHTz+2wnIKcr8776KeTjC/vIJNSdPefZe66qpvli1N3+b/f9xJc3MT
      mvrga0+CvnkSihWb+YdPhajrOul0+gc/zo9VT08PX3zxBcXFxXR1dXHx4kWKiorIz88nk9V5
      lqYBzGazXPjyPLF4jMKCAj756EPu3r1LU9MWVFXFMAzOnf2CTDbDyNAwbRe+xGQyU1Jayocf
      nMHhcKxyMVw6zK3+BX7+izexmS30d15iOubg2IEmFuZT2LNhgvEp3nq/nb/596/T191OcDHA
      8VdeJNekMNY3SCqeZDEaJzTcw7h3ifzCIiJZG8d21/HVpa+p3XUYW2weny+Js8SES8tjovsy
      AVMFG1xJuocXOXziBKV5341Pur9UKsXY2BhvvvkmNpuNvLw8GhsbWV5epr6+fr2H99gpisLW
      bdtY8i2xuLhIdU0tJpOJWY+H2ro65ufnCYfDRMJhdu3ZQ2VVFWOjI+Tm5pKIx4nFYqvsATQ7
      m6pz+ezjjwlFAvQvO2nJ8TIQTLIwmSA7N4qzZTsp3cGJ3RsZmQ2wqyTCmL6BukKVDz/4nPoS
      BU+mGN9gH607K+laKiDq6SU80ctISGVyao7oVC8lu08Qm+4l4p9lKFHDXx3YzPjgbWYm+pjN
      FNNc/2gzG4u8B0gmk7S3tzM2Nobf78dkMuH1etm7dy+qqj5zewBFUTAMg2AwgM1mw8DA7rCT
      SqUoLi7mg9+/jzMvj9DKCiWlpXR2dlBcXML169dwuVyk0+lVzgESQa7f6kMzaeiWAnRvH9cH
      fZQW5jM+8DXdIzNoVhuR6QH6p+7NuW7WNAzDILM8DMXb2NDyHPMDt1E1MyaThtVqxWTSKKms
      waxqbNvaiC2vkJqSAgAsBVWExjq5cnOA/qFBnK58NHnl7iOx2WzU1tai6zqqqvLee+/hdrsZ
      Hh5e76E9EalUio8+OMP5s18QjUa5fu0abRe+pLS0lKnJSfYfOHgvDMOgt6ebeCzG4uIChw8f
      RdM0FEVZZXZowyCbzaAbCiaThp7NogMmTSObyYCioGkaejYDyr3jdlUxMBQVBQPdUNBUyP5h
      JmJVVdANBQwdVVXIZLIoqooKKKqGYWRBUTGyGXRUVMVA10HVVDT10c7TRZ8dWtd1MpkMJpOJ
      TCaDYRjf/McZ8VSGh/xPe34UDMO4t7c3DExmM7p+7/U26/GgqAq1tXUYhoFhGOi6jq7rmEym
      e+cH+r29oZweXSDPWgCPg/wYVBKaDEASmgxAEpoMQBKaDEASmgxAEpoMQBKaDEASmgxAEpoM
      QBLavwJ0KsCri3BVFAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Histogram_Deaths' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Histogram_Tests' width='192'>
      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
      Jb7K3ZkI/x/+FqCvTkIx+wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Histogram_TotalCases' width='192'>
      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
      4zKMAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Maps' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Packed Bubbles' width='192'>
      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
      uxz+BpVceGYSJeXlAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Pie Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sccater' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Stacked Bar Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Treemaps' width='192'>
      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
      P907/P8Hxa7UpI/DtAEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='linear_reg' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='newcase_time' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='newdeadths_time' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='newrecovered_time' width='192'>
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
